#include <Arduino.h>#include <ESP8266WiFi.h>#include "FastLED.h"#include "ESP8266Ping.h"// e' Wemos !!!// led ws2801#define NUM_LEDS 5CRGB leds[NUM_LEDS];#define LED_DATA_PIN D2#define LED_CLOCK_PIN D3#define LED_DELAY 10const char* remote_host = "www.google.com";// Return RSSI or 0 if target SSID not found//int32_t getRSSI(const char* target_ssid) {int32_t getRSSI() {    byte available_networks = WiFi.scanNetworks();    int max=-500;    for (int network = 0; network < available_networks; network++) {		//Serial.println(network);        int sig=WiFi.RSSI(network);        if(sig>max) max=sig;        /*        if (WiFi.SSID(network).compareTo(target_ssid) == 0) {            return WiFi.RSSI(network);        }        */    }    return max;}// This function sets up the ledsand tells the controller about themvoid setup() {    pinMode(LED_BUILTIN, OUTPUT);    Serial.begin(115200);    // sanity check delay - allows reprogramming if accidently blowing power w/leds    delay(2000);    FastLED.addLeds<WS2801, LED_DATA_PIN, LED_CLOCK_PIN, BGR>(leds, NUM_LEDS);}// This function runs over and over, and is where you do the magic to light// your leds.void loop() {    Serial.println("loop...");    digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)    //unsigned long before = millis();    //int32_t rssi = getRSSI(SSID);    int32_t rssi = getRSSI();    //unsigned long after = millis();    //Serial.print("Signal strength: ");    /*    if(rssi<min) min=rssi;    if(rssi>max) max=rssi;    */    Serial.print(rssi);    int valore=map(rssi, -95, -25, 0, NUM_LEDS);    Serial.println("dBm");    Serial.print("led: ");    Serial.println(valore);    leds[valore]=CRGB::Red;    FastLED.show();        /*    delay(500);    ring(valore,CRGB::Green);    delay(500);    ring(valore,CRGB::Blue);    delay(500);    */    digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW            IPAddress ip (192, 168, 11, 1); // The remote ip to ping    bool ret = Ping.ping(ip);	 int avg_time_ms = Ping.averageTime();    Serial.print("success: ");    Serial.println(ret);    Serial.print("avg_time_ms: ");    Serial.println(avg_time_ms);    /*    if(digitalRead(PIR_PIN)==HIGH) {        impulse(CRGB::Red);    }    else    {        impulse(CRGB::Blue);    }    */    delay(500);}