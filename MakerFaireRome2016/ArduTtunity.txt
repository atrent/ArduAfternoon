------------------------------------------------
ArduTtunity: a simulated remote (Martian?) rover
------------------------------------------------

Introduction
============

Since the beginning of our group (ArduinoAfternoon) meetings in 2011 we devised a way to *reuse* our hardware in many projects so that we could spare on hardware buying. When we started with a robot-like device (the RFID based pub "waiter") we devised a simple set of pieces as a "base" for many subsequent projects.
Our general base architecture is composed by:
- arduino uno/mega stacked with...
- NUY stacked with...
- motor shield connected to...
- two DC motors + rubber wheels powered by...
- a sealed acid 12V DC rechargeable battery regulated by...
- a trimmable power regulator
Then there are some optional peripherals for the diverse usage contexts:
- USB hub connected to the NUY (the wifi onboard the NUY can be used as a control channel)
- webcam connected to the hub (i.e., to the NUY)
- wifi dongles connected to the hub (i.e., to the NUY)
- solar panel to recharge battery
- USB flash drive (e.g., to have an overlay filesystem beyond the limited openwrt on the NUY)
- RFID reader
- ...

All contained in the omnipresent, robust, "stainless steel", full of drilled holes, student battered baking pan!

The architecture was used in:
- ArduCameriere (RFID based pub waiter)
- ArduGuardia (wiki driven home security robot)
- ArduiTter (twitter guided wanderer)

(see photo)


Architecture
============

After the Arduitter (a twitter driven robot) we decided to improve our project to create a simulation of a remote planets rover (maybe influenced by "The Martian"?).
We already had all the main components, we just added the solar panel: at the moment it's not enough to fully recharge the battery, we need to improve.

The software that runs on the NUY accepts "action plans" (route + actions such as "take snapshot") via wifi (the NUY works as an access point), but to simulate the DSN (NASA's Deep Space Network) the plans are executed with a programmable delay and the feedback data is sent after the same delay.

The effect is that in the "control room" you have to plan carefully all the actions since there is no way to interact in realtime with the rover.
